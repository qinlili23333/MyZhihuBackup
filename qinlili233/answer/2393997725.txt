为什么现在前端的招聘要求写满了各种ui框架和js框架，原生js和css不香吗？
<p data-pid="-9Rvh69_">框架的本质是封装复用思想</p><p data-pid="QN3V1Tdq">即把需要重复使用的内容包装起来便于快捷的重用</p><p><br></p><p data-pid="U7ASsy1b">比如这一段原生js就是我封装的一个简单的生成菜单按钮的方法</p><blockquote data-pid="NorPWwGi"> ​function​ ​topBtn​(​iconSrc​,​ ​name​)​ ​{ <br> ​    ​let​ ​btn​ ​=​ ​document​.​createElement​(​"div"​)​; <br> ​    ​btn​.​className​ ​=​ ​"topBtn" <br> ​    ​let​ ​icon​ ​=​ ​document​.​createElement​(​"img"​)​; <br> ​    ​icon​.​src​ ​=​ ​iconSrc​; <br> ​    ​icon​.​className​ ​=​ ​"topBtnIcon" <br> ​    ​btn​.​appendChild​(​icon​)​; <br> ​    ​let​ ​text​ ​=​ ​document​.​createElement​(​"H2"​) <br> ​    ​text​.​innerText​ ​=​ ​name​; <br> ​    ​text​.​className​ ​=​ ​"topBtnText"​; <br> ​    ​btn​.​appendChild​(​text​)​; <br> ​    ​document​.​getElementById​(​"floatTop"​)​.​appendChild​(​btn​)​; <br> ​    ​return​ ​btn​; <br> ​}</blockquote><p data-pid="iqpcRNqR">然后像这样的方法写的多了，以至于我不需要再写其他方法，只需要靠调用这些方法就可以轻松的做出页面了，那么这些方法的合集实际上就构成了一个框架</p><p><br></p><h2>复用是很重要的编程思想，是大幅降低程序复杂度的方法</h2><p><br></p><p data-pid="FyNn_3Sm">当然，我不推荐对于轻量的需求上高复杂度的框架</p><p data-pid="gth3C0lE">用框架是为了增加复用率的，也就是用框架应该比不用框架代码更简洁，用户需要加载的资源体积更小</p><p data-pid="6_Bwh9ZU">如果自造轮子最后只需要100k，却套了个用户侧加载总体积近2m的框架，那就是完全不为用户考虑的毒瘤行为了</p>
1647512399