如何评价无服务器计算（serverless）的未来前景？你认为 serverless 有未来吗？
<p data-pid="k8AjZoGt">serverless最大的优势在于资源得到了更合理的利用</p><p data-pid="RbAVOFXk">传统的购买服务器部署应用的方式，在没有使用的时候，服务器就被浪费掉了，对于我这种需要部署一些个人用的小规模应用的情况，买服务器非常的不合算，每天可能实际使用就几分钟，大部分时间都在空置</p><p data-pid="2h0GHT-Q">但是serverless是按照实际使用次数/时长来计费的，也就是说，不用的时候真正不花一分钱</p><p data-pid="hJ9AX0wi">所以我越来越多的使用serverless部署这些小规模应用，每天实际上使用的CPU时间加起来可能还不到一秒，这可以把我的使用成本压缩到几乎忽略不计的程度上</p><p data-pid="AbBEuD1c">而更多人像我这样部署到serverless之后，总的服务器消耗就大幅度下降了，原本可能每个人都需要一台独立的服务器，现在上百个人可能实际上就只共享了一台服务器，但每个人都能有良好的用户体验</p><p data-pid="LGrsrgz7">而且serverless先天是高并发的，可以无限制的并发请求。当我自己购买服务器部署时，我需要自己在开发应用时解决并发问题，要么就是单线程同时只处理一个请求。但是serverless开发的时候就不用管并发，我的代码只要能处理一个请求，那么就一定能同时创建无限的运行时来处理更多的请求</p><p data-pid="pYbCEAPl">而且因为serverless的高并发不需要在同一台物理服务器上运行，事实上可以跑在任意位置任意数量的物理服务器上，当我一份代码部署完成之后，用户访问时可以就近选择最近的节点，从而降低延迟，而对于单一物理服务器的传统部署，地球对面的用户访问起来就会非常痛苦</p><p data-pid="wMvj6ZBV">因为每个请求都是在独立运行时里处理的，错误处理也可以变得很简单，很多不处理就会崩溃的地方真的可以不处理，崩就崩呗，反正就崩单一请求对应的运行时，对其他用户没影响。不像开发传统服务器应用，得尽可能不崩溃否则崩了还得远程上去重启进程</p><p data-pid="-QhTkuMd">从这个角度来看serverless是轻量化应用的最优解决方案，成本更低，复杂度更低，用户体验更好</p><p data-pid="PmCR6Svk">当然，方便的前提一定是更低的自由度，所以对于复杂的企业项目，serverless仍然不能成为首选</p><p><br></p><p data-pid="ITMAWUef">在最后附上一个我的实战项目吧</p><a data-draft-node="block" data-draft-type="link-card" href="http://link.zhihu.com/?target=https%3A//github.com/qinlili23333/ctfile.TencentCloud" class=" external" target="_blank" rel="nofollow noreferrer"><span class="invisible">https://</span><span class="visible">github.com/qinlili23333</span><span class="invisible">/ctfile.TencentCloud</span><span class="ellipsis"></span></a><p data-pid="hRH1O63L">在腾讯云serverless上完美部署，一个解析城通网盘直连下载地址的服务</p><p data-pid="K6sptgVR">想入门serverless开发的可以就以这个项目的源码为基础做了解，这个项目其实并不复杂，我的代码写的应该也还算可读性挺强的（自认为的）</p><p data-pid="Mnxm69QP">有技术见解想探讨的话欢迎评论或者在github提issue交流</p>
1639744728