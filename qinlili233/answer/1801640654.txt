如何看待 Model 3 自动驾驶时方向盘卡死撞树且气囊未弹出，行车记录仪事发时的视频消失？
<p data-pid="62mpPYzC">正常情况来说，自动驾驶接管方向情况下，如果人工操控方向盘，是依靠传感器检测，然后释放方向机电机输出，人工才能正常控制</p><p data-pid="degreR4f">因为方向机电机的扭矩是相当大的，所以如果人工直接和方向机电机拔河，是肯定会觉得卡死干不动的</p><p data-pid="kimzmycw">这就产生了一个问题，如果传感器或者固件逻辑问题导致人工操控未能检测到，方向机电机输出未释放，那么虽然方向盘还有物理连接在方向机上，你人还是转不动方向盘</p><p data-pid="Abv9ZdQV">这就是物理连接的局限性，人电拔河，人必输无疑</p><p><br></p><p data-pid="o0h8Wdt6">至于视频丢失，我只能大胆假设的猜测一种可能性（只是可能性之一）</p><p data-pid="WFbzU7pN">我的猜测是这也是一个严重的bug，或者说是当一组feature被不恰当的拼合在一起后形成了一个bug</p><p data-pid="AAQsKuqo">事实1：两个月前，特斯拉发生了一次大规模召回，原因是emmc nand寿命耗尽导致mcu嗝屁，在此之后，特斯拉推送了一次ota，这次ota启用了一些写入缓存机制来延缓nand寿命</p><p data-pid="pB7Brotu">事实2：写入缓存机制是一种很常见的改善写入性能和节约闪存寿命的技术，它在电脑和手机等设备上也有应用，这种技术将需要写入的内容预先缓存在内存里，再同步到闪存。这种技术有一个特点就是，如果因为某些原因，内存里的数据丢失或损坏，则这部分数据无法被安全的写入到闪存</p><p data-pid="y8OP2Xrg">事实3：model 3（fsd3.0）的单系统内存容量为8G，且没有ecc</p><p data-pid="eUB9kQBI">事实4：特斯拉有碰撞检测</p><p data-pid="YgvS7xBU">推测1：没有ecc的内存无法及时发现内存heap中的潜在错误数据，因为某些原因内存颗粒里部分电平反转损坏了缓存数据，导致写入缓存失效，数据未能写入u盘</p><p data-pid="-m8ETkr6">推测2：因为部分代码存在内存泄漏，缓存数据损坏（可能性不高）</p><p data-pid="aQMDgmSI">推测3：碰撞检测触发后中断录像并开启新录像，但由于这部分代码尚未适配写入缓存机制，直接把内存里的缓存录像当作垃圾数据给清扫掉了（可能性最大）</p><p><br></p><p data-pid="11cc1HjP">我们来详解一下可能性最大的推测3</p><p data-pid="8Yf1S0FK">众所周知，io操作很可能卡住，所以一般写代码的时候都要把io异步</p><p data-pid="_ApK4im7">特斯拉很可能在录像模块上用了一个ByteBuffer，一条线程把录像数据源源不断塞进ByteBuffer，另一条线程则从ByteBuffer里取出数据写入存储</p><p data-pid="-L8iC54r">在新建录像时，肯定需要一个空的Buffer，但如果new一个，可能随着时间越来越长，内存里老的Buffer无法回收，就泄露了。那么最简单的操作就是把这个Buffer清空复用</p><p data-pid="nABn8vlB">在没有写入缓存的时候，这个Buffer非常小，可能只容纳最小的时间片，所以新建录像丢失的时间会非常短，不会被重视</p><p data-pid="ubIHozUP">在手动新建录像时，因为停止录像-新建录像人工操作有间隔，间隔可以继续写入，所以也不容易暴露出来这个潜在的数据丢失</p><p data-pid="nVI-u0JQ">碰撞发生时，因为立即终止并新建录像，加上写入缓存机制的存在，导致缓存的录像数据全部丢失，直接gg</p><p><br></p><p data-pid="66zwYuQl">那么如果真的如此，该怎么解决呢？很好办，不要清空Buffer，把新建录像改为在Buffer里插一个分割用的标识，写入线程里读到这个标识就分割文件，就可以避免这个问题了</p><p></p>
1616766508