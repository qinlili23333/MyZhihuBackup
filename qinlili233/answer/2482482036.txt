如何看待 Android 13 对折叠屏手机、平板电脑等大屏设备的适配与协同？有哪些新的体验？
<h2>我的看法是：仅仅是聊胜于无</h2><p data-pid="Zpe2hIk9">在这次新增API之前，实际上已经可以做出很好的适配大屏的界面了</p><p data-pid="M-M7ZTdO">16年谷歌就搞了FlexboxLayout，实现了在android上类似于css flex的排布效果，可以说使用FlexboxLayout配合android天生的分情况布局（不管是基于dpi，基于系统版本还是基于现显示宽度）的办法，早就完全可以开发出同时适配各种尺寸屏幕设备的app了</p><h2>所以显然现在android大屏体验不够好，其实根本不是谷歌的锅</h2><p data-pid="RVN1kfak">相反，一些开发者骨子里就缺乏那根考虑大屏的经，导致开发时干了一些对屏幕适配不友好的操作</p><p><br></p><p data-pid="K3PHkJOT">我这里就举几个最常见的例子，只要把这些问题解决我敢说android的大屏生态能改善至少60%</p><h2>问题1：屏幕方向支持有限</h2><p data-pid="G1GOk68S">有多少app不支持横屏使用？固定显示比例的游戏只有单一方向支持我能理解，但绝大多数app都应该不存在设计横屏界面的障碍，只有开发者偷懒不支持横屏的</p><blockquote data-pid="sJG6BBtp">当然，这个问题可以用Rotation Control解决一部分</blockquote><h2>问题2：大量使用百分比尺寸却没有限制最大最小值和比例</h2><p data-pid="vASF9nVd">这个问题其实不仅仅是android，一些网页也有，但毕竟浏览器改变窗口大小比较容易，所以容易被发现，网页上出现的概率远低于app</p><p data-pid="Q1FvnNmH">这个问题主要源于开发者过度追求百分百还原美工设计稿，忽略了设备多样性导致。比如美工出图是基于pixel2（16：9屏幕）设计，然后开发者也仅仅按照16：9屏幕用百分比尺寸做了效果还原（看上去和美工出图一致），然后app到了4：3,21：9,5：4等各种各样比例的屏幕上就会出现稀奇古怪的问题，甚至我看到过ImageView尺寸用百分比尺寸然后因为设备屏幕比例导致里面的图片被切掉两边的情况</p><p data-pid="YwXX62o4">当然，也有一部分开发者，根本没有考虑大屏用户，在手机上100%宽度，大小刚刚好，在立式广告牌上它还是100%宽度，大的吓死人，不管是什么设备看上去都像是手机放大，这合理吗？显然不合理</p><p data-pid="2iFbIYGE">一个内容它应该在不同尺寸的设备上保持同样的视觉尺寸，而不是相对屏幕尺寸。在5寸屏上一张图如果撑满了屏幕，在10寸屏上它就应该只有占据四分之一，如果这两块屏幕视觉距离相同的话。换句更容易听懂的人话就是，你把不同的设备按照正常的使用距离摆放在你的视野里，同样的元素在你的眼睛里看到的尺寸应该是接近的。当然如果元素已经接近撑满情况下拉到盛满来干掉黑边我觉得是可以的，所以我比较主张基于宽度设计2-3份layout的基础上给所有元素都加上min/maxWidth等限制参数来约束大小，或者直接使用px等单位而不是百分比</p><h2>问题3：使用屏幕大小而不是窗口大小来计算界面尺寸</h2><p data-pid="CeHmkaNO">特点就是直接以分屏或窗口化打开之后，有些界面飞出了显示范围。一些app使用动态计算的布局尺寸，但却误用了屏幕大小作为计算基数，没有考虑分屏或多窗口情况，当然近些年随着分屏流行起来大部分app都改善了这个问题，在17年那会玩android x86分屏简直就是灾难性的</p><h2>问题4：在窗口尺寸变更时直接重载或摆烂不处理界面变化</h2><p data-pid="PYIrBsPW">饿了么就是个典型</p><figure data-size="small"><noscript><img src="https://pic3.zhimg.com/v2-03e774b4ec79bdb598063eb36758fccf_720w.jpg?source=3af55fa1" data-rawwidth="1280" data-rawheight="2844" data-size="small" data-default-watermark-src="https://pic3.zhimg.com/v2-c67ccfc56ea77c77709e6cb45026eaa0_720w.jpg?source=3af55fa1" class="origin_image zh-lightbox-thumb" width="1280" data-original="https://pic2.zhimg.com/v2-03e774b4ec79bdb598063eb36758fccf_r.jpg?source=3af55fa1"></noscript><img src="data:image/svg+xml;utf8,&lt;svg%20xmlns='http://www.w3.org/2000/svg'%20width='1280'%20height='2844'&gt;&lt;/svg&gt;" data-rawwidth="1280" data-rawheight="2844" data-size="small" data-default-watermark-src="https://pic3.zhimg.com/v2-c67ccfc56ea77c77709e6cb45026eaa0_720w.jpg?source=3af55fa1" class="origin_image zh-lightbox-thumb lazy" width="1280" data-original="https://pic2.zhimg.com/v2-03e774b4ec79bdb598063eb36758fccf_r.jpg?source=3af55fa1" data-actualsrc="https://pic3.zhimg.com/v2-03e774b4ec79bdb598063eb36758fccf_720w.jpg?source=3af55fa1"></figure><p data-pid="CU2K0186">拖动窗口调整大小后本应填满宽度的界面根本不变化，出现留白</p><p data-pid="SHIp3S-c">即虽然manifest里声明了app可以处理尺寸变更，却摆烂没处理</p><p data-pid="2ahetRZA">还有一些app，manifest里不声明可处理尺寸变更，于是窗口调整一下大小就重载活动了，用户输入的东西？丢掉辣！</p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p data-pid="9qzh3vc7">开发者脑子里必须有一根弦时刻紧绷，那就是</p><h2>用户的设备和使用方式都很多样化</h2><p></p>
1652351776