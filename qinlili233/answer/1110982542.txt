Python真的不适合游戏开发吗？游戏全都用像Python这种解释型语言写，对开发出的游戏有什么影响？
<p data-pid="HhisUOmz">目前python的效率完全达不到游戏的要求。</p><p data-pid="qOox9dwC">游戏对实时性的要求是非常高的，如果你要实现60fps，就要每一帧计算时间16ms以内，更何况随着最高300hz的高刷屏的出现，现在游戏都得考虑做到300fps了，300fps要求每一帧计算时间3.3ms以内。</p><p data-pid="H3TJ86TS">主流游戏均使用c/cpp作为底层，就是因为预编译，运行快。</p><p data-pid="qS3ZS0sW">unity用c井，所以为了效率现在把mono抛掉了换il2cpp了，转换到cpp，效率也过得去。</p><p data-pid="kgatMPtw">java（包括Android的smali）也有AOT编译，能至少达到cpp的80%-90%性能。</p><p data-pid="ulBsRENX">近年来h5游戏越来越成熟，离不开v8引擎，v8把js编译到机器码运行，也能实现cpp的60-80%的性能。</p><p data-pid="k0aky41x">你看，为了效率，所有的游戏开发语言都要往native上靠。那么python有类似的解决方法吗？pyo文件仅仅提高了模块加载速度，并没有解决解释执行本身的缓慢问题，显然还不够。cython是解决方法之一，但是cython实际上又超过python的范畴了，融合了c和python的写法，不能算纯python开发。（纯python的项目要移植到cython坑也很多）</p><p data-pid="8JxC5VJ9">那么基于python的游戏引擎有没有呢？<b>有倒是有，renpy，但是这玩意只有上层在python上啊，它的底层是什么？是sdl！sdl是什么写的？是纯c啊！</b></p><p></p>
1585383567