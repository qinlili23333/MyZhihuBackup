中国人的手机内存大小呈现怎样的正态分布曲线？
<p data-pid="Uxy7bJBt">作为开发者兼破解者,实际上我觉得开发软件不需要关注主流设备的配置.</p><p data-pid="1qeqd2z8">软件和硬件本来就是互相促进的,软件需求上来,倒逼硬件发展,硬件发展又反过来促进软件进一步压榨硬件性能,这是一个良性循环.</p><p data-pid="IblFG9rN">但我不是说开发者可以就这个理由而不做优化了.我认为开发者应该尽自己所能,让软件达到更高的效率,比如本来20个clock cycle可以完成的任务,压缩到10个cycle,这就是效率提升.</p><p data-pid="_ErTriFY">对于一个正常的软件开发过程,第一步肯定是跑起来,要能运行,这时候可以不计较速度,能正常跑不出错就行.但是在跑起来之后,就要进入第二步,跑得快.这个阶段就要在对软件功能不做修改的情况下,优化运行效率.当然,有些大牛尤其是打竞赛的,上来就能到跑得快的境界,这最好.</p><p><br></p><p data-pid="bQYAS0Rf">好,那么回归题目,内存大小.内存的使用原则个人认为有下列几个原则,一层一层递进</p><p data-pid="UXKEAUqX">1.大胆用.内存不是拿来看的,该用就要用.要让软件有能力用大内存,例如编译为64位,利用4g以上内存,这就是方法之一.</p><p data-pid="ayuymrfm">2.不滥用.绝对不容许超出合理范围使用内存,即必须建立一个完善的内存回收机制,必须避免出现内存泄漏问题,内存泄漏会导致无论用户设备内存多大都会爆,作为开发者,必须把内存泄漏消灭在开发阶段.(点名批评chrome)</p><p data-pid="7s3H_7hs">3.高效用.这个阶段主要就要到优化算法上了.同一个需求,可以实现的代码有千千万万种,有的可能要120k内存,有的只要40k内存.通过改良算法步骤,提高变量复用等等手段,可以节约内存.不要小看60k到40k的单个算法内存节约,在频繁调用的方法上,每次节约20k可能最后就是600m和400m的差距.</p><p><br></p><p data-pid="GzaZ9Z7h">那么再进一步,怎么开发出不臃肿的软件</p><p data-pid="yNVHZc9O">1.除了最基础的64位编译,还需要合理使用多进程,OOM内存释放是针对进程的,多进程有效避免被OOM,提高使用内存的能力</p><p data-pid="B7JhB8CX">2.不要把鸡蛋塞一个篮子里.单个软件解决单个需求集合,不要想着一个软件做成一个系统.采用框架化插件化,避免被用户用不到的功能消耗内存</p><p data-pid="IjTWtb4t">3.不要盲目套库.开源库确实能加速开发,但在使用时一定要有所取舍,对开源库进行合理的精简,同时不要照搬demo,必须根据项目实际情况</p><p data-pid="gah1mROK">4.测试时不要仅仅关注有没有跑起来,一定要对硬件负载进行监控,及时发现不合理的资源消耗</p>
1582266714