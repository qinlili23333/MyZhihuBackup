为什么汽车上的交互系统不能做的像手机一样流畅？
<p data-pid="uwRi63hv">在手机上，UI渲染一般是最高优先级的，即使cpu满载了，surfaceflinger仍然能在高优先下保证设备的流畅度</p><p data-pid="_s-NdA-f">但是汽车上UI不是高优先级也绝对不能是高优先级。汽车上永远是设备控制进程最高优先级。如果UI得到了最高优先级，试想一下，在cpu性能不足时，为了保证交互流畅，电子刹车进程得不到充足的资源，刹车晚了一秒，这不就出人命了吗？喷油系统延迟喷油一秒，发动机不就熄火了吗？所以在汽车上，设备控制的优先级是最高的。</p><p><br></p><p data-pid="v5-rkBpj">同时，众所周知，手机和电脑接入的外设越多，对性能影响越大。手机的外设就屏幕，按键，话筒，扬声器，相机，以及少量传感器。而汽车的外设多了去了，除了屏幕，还有大量的传感器，更多的扬声器，大量继电器......在大量的外设压力下，光驱动就消耗了大量的资源，影响了设备发挥</p><p><br></p><p data-pid="d5YqGvok">那么有没有办法解决呢？实际上是有的。只需要使用多颗处理器协同运作，处理器期间依靠高带宽通道通信就可以了。这方面老黄做的非常高明。老黄用了两颗tegra配合两颗旗舰gpu，将大规模并行计算推到gpu身上，降低cpu压力。缺点是，这套平台峰值高达500w耗电，管理整车电力就很难了。一旦电瓶电压被过度拉低，一些车载设备的运行就会被影响。</p><p data-pid="qFA1m36q">但多处理器也是有明显弊端的。两颗8核处理器肯定不如一颗16核的效率高。处理器之间的通信会增加延迟，从而制约性能发挥。盲目的增加处理器不仅容易成本超标，也容易给性能debuff</p><p></p><p></p>
1576937761