如何看待大牛助手APP因涉嫌犯破坏计算机信息罪，开发者张某获刑5年6个月?
<blockquote data-pid="DRI1Nr69">经其公司技术人员对“大牛助手Android系统1．1．1”进行分析，发现该软件绕过了“钉钉”无限安全保镖模块，劫持了“钉钉”平行空间检测接口，当“钉钉”的平行空间检测接口需要获取设备信息时，大牛助手通过重放技术伪造虚假数据，直接向“钉钉”的平行空间检测接口传输虚假数据，造成伪造打卡记录，干扰“钉钉”系统的正常运行。</blockquote><h2>你阿里就没有一个智商在线的程序员吗？</h2><p><br></p><h2>搞android开发的来澄清一下，这段话说的完全是狗屁</h2><h2>市面上所有的虚拟定位工具，都不会直接向app传输数据</h2><p data-pid="M7s_Cm1r">第一，没人知道你在用什么api定位，我不可能精准分析这个app到底使用了什么api在定位，然后直接主动调用回调</p><p data-pid="TbynSieM">第二，没人知道你什么时候才会定位，如果周期性主动回调，兼容性也不会好</p><h2>虚拟定位工具的原理是当app请求定位时，直接覆盖系统底层本来的返回值</h2><p data-pid="hryK1TQo">不管是开发者选项里面的模拟位置，还是root甚至xposed级别的hook，核心思路都是去替代返回值</p><p data-pid="ERMYL2ax">即app调用了定位api，工具覆盖了返回值，系统再把这个被覆盖的返回值返回给app</p><p><br></p><p><br></p><h2>我认为只要不涉及到修改程序本身的安装包或二进制文件，就无法认定为对该程序产生破坏</h2><p data-pid="9zvLD5Fm">众所周知，软件是运行在系统上的，系统也是有可能出bug的</p><p data-pid="kJJ8bk3l">那么系统出bug在api返回了一个错误的结果，和另一个软件通过修改系统在api返回了一个错误的结果，显然对于这个程序而言是没有区别的</p><p data-pid="jcrXDvpl">同样，使用正常的windows系统和使用linux下的wine运行，对于这个程序而言也应该是没有区别的，虽然运行时不同，但是对于程序的抽象api来说是一样的</p><p data-pid="Br47Z0Jo">在修改系统来实现替换返回值的过程中，真正被修改了的程序只可能是系统，虽然破坏闭源操作系统可能确实会侵犯操作系统开发者的利益，但操作系统开发者出于市场占有等角度考虑一般不会采取法律措施限制此类行为</p><p><br></p><p><br></p><h2>另外，我也想特别对于开发者强调一下</h2><p data-pid="_AEiXuDQ">在不利用漏洞的情况下，下层软件对于上层是绝对无法反抗的</p><p data-pid="S3y-5Ual">比如硬件-操作系统-浏览器-网页，这个很常见的模型</p><p data-pid="qW5NTgJl">操作系统无法验证硬件返回的值是否是正确的，比如我把显卡刷bios开核了，操作系统看到的是开核后的型号，而不知道我开核了</p><p data-pid="YTiHHdF2">浏览器也无法验证操作系统返回的值是否正确，最经典的就是我把系统时间改掉了，浏览器获取到timestamp也变了，但浏览器不知道获取到timestamp是我修改后的时间</p><p data-pid="odhVzLk-">网页也无法验证浏览器返回的值是否正确，比如firefox的WEBGL已经很多个版本一直返回所有n卡的设备名称为980ti了，3060也显示980ti，但网页本身无法知道用户到底是不是真的在用980ti</p><p data-pid="I5sjqgDp">当然，利用漏洞确实可以实现越级控制，比如虚拟机逃逸，但这种操作并不百分百保证可用</p><p data-pid="NnApaYPs">你可以适当加一些检测，尝试去阻止部分不正常行为，但永远不要觉得你有办法阻拦一切基于上层修改来实现的不正常行为，因为上层修改真的可以做到完全无法被检测</p>
1634096737